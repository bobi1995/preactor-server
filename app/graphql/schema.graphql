type Query {
  hello: String
  getResources: [Resource]
  getResource(id: ID!): Resource
  getGroups: [Group]
  getShifts: [Shift]
  getShift(id: ID!): Shift
  getBreaks: [Break]
  getSchedules: [WeekSchedule]
  getSchedule(id: ID!): WeekSchedule
}

type Mutation {
  createResource(input: ResourceInput!): Resource
  createGroup(name: String!, description: String): Group
  createShift(input: ShiftInput!): Shift
  createBreak(input: BreakInput!): Break
  createSchedule(name: String!): WeekSchedule
  updateSchedule(id: ID!, input: WeekScheduleInput!): WeekSchedule
  assignBreakToShift(shiftId: ID!, breakId: ID!): Shift
  assignSchedule(resourceId: ID!, scheduleId: ID!): Resource
  assignAlternativeShiftToResource(
    resourceId: ID!
    shiftId: ID!
    startDate: String
    endDate: String
  ): AlternativeShift
  assignMassiveAlternative(
    resourceIds: [ID!]!
    shiftId: ID!
    startDate: String
    endDate: String
  ): Shift
  addResourceToGroup(groupId: ID!, resourceId: ID!): String
  deleteBreak(id: ID!): Break
  deleteBreakFromShift(shiftId: ID!, breakId: ID!): Shift
  deleteAlternativeShift(id: ID!): AlternativeShift
  deleteSchedule(id: ID!): WeekSchedule
}

type Resource {
  id: ID!
  name: String!
  description: String
  color: String
  picture: String
  external_code: String
  orders: [Order]
  schedule: WeekSchedule
  alternateShifts: [AlternativeShift]
  restrictions: [Restriction]
}

type Group {
  id: ID!
  name: String!
  description: String
  resources: [Resource]
}

type Order {
  id: ID!
  orderNumber: String!
}

type Shift {
  id: ID!
  name: String!
  startHour: String!
  endHour: String!
  breaks: [Break]
}

type WeekSchedule {
  id: ID!
  name: String!
  monday: Shift
  tuesday: Shift
  wednesday: Shift
  thursday: Shift
  friday: Shift
  saturday: Shift
  sunday: Shift
}

type AlternativeShift {
  id: ID!
  shiftId: ID!
  shift: Shift
  resourceId: Resource!
  startDate: String!
  endDate: String!
}
type Restriction {
  id: ID!
  name: String!
  description: String
}

type Break {
  id: ID!
  name: String!
  startHour: String!
  endHour: String!
}

input ResourceInput {
  name: String!
  description: String
  color: String
  picture: String
  regularShiftId: ID
}

input ShiftInput {
  name: String!
  startHour: String!
  endHour: String!
}

input BreakInput {
  name: String!
  startHour: String!
  endHour: String!
}

input WeekScheduleInput {
  name: String!
  mondayShiftId: String
  tuesdayShiftId: String
  wednesdayShiftId: String
  thursdayShiftId: String
  fridayShiftId: String
  saturdayShiftId: String
  sundayShiftId: String
}
